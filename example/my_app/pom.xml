<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>examples.aglio</groupId>
    <artifactId>my-app</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <parent>
        <groupId>examples.aglio</groupId>
        <artifactId>my-app-root</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <configuration>
                            <tasks>
                                <mkdir dir="${project.build.directory}/classes/html" />
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jolokia</groupId>
                <!-- For intro to this plugin see https://github.com/rhuss/docker-maven-plugin/blob/master/doc/intro.md -->
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.13.4</version>
                <configuration>
                    <!--
                    Note: to actually see Aglio's console output you'll need to run `docker logs <container id>` 
                    after the container finishes running.
                	-->
                    <showLogs>true</showLogs>
                    <verbose>true</verbose>
                    <removeVolumes>true</removeVolumes>

                    <image>aglio</image>
                    <images>
                        <image>
                            <!-- Specify name of Docker image to pull (i.e., `docker pull <image name>`). Pull is automatic. -->
                            <name>humangeo/aglio</name>
                            <!-- Give the container a name vs. Docker's randomly-generated names -->
                            <alias>aglio</alias>
                            <run>
                                <namingStrategy>alias</namingStrategy>
                                <!--
                                    The humangeo/algio Docker image is set up to run the 'aglio' command-line binary
                                    on startup (i.e., via the ENTRYPOINT command in the Dockerfile). The <cmd> below is
                                    the set of command-line arguments passed to the 'aglio' command. For more info on
                                    the aglio arguments see https://github.com/danielgtaylor/aglio.

                                    IMPORTANT: Note how volumes are mounted from host machine to Docker container below;
                                    the paths in these arguments use those shared volumes.
                                -->
                                <cmd>-i /shared_input_dir/my_rest_api.md -o /shared_output_dir/classes/html/my_rest_api.html</cmd>
                                <volumes>
                                    <bind>
                                        <!-- Mount the local ../my_docs dir to /shared_input_dir in the Docker container -->
                                        <volume>${project.parent.basedir}/my_docs:/shared_input_dir</volume>

                                        <!-- Mount the local ./target dir to /shared_output_dir in the Docker container -->
                                        <volume>${project.build.directory}:/shared_output_dir</volume>
                                    </bind>
                                </volumes>
                                <log>
                                    <enabled>true</enabled>
                                    <prefix>aglio</prefix>
                                </log>
                            </run>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>start-the-container</id>
                        <!--
                            IMPORTANT: Run as part of the generate-resources phase so the Aglio-generated HTML will be
                            included in the output JAR file (i.e., generated BEFORE .jar is made as part of 'package' phase).
                        -->
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>remove-the-container</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
